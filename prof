#!/usr/bin/env bash

function main {
    case "$1" in
        create)
            create_profile "$2" "$3"
            ;;
        edit)
            edit_profile "$2"
            ;;
        delete)
            delete_profile "$2"
            ;;
        list)
            list_profiles
            ;;
        export)
            export_profile "$2" "$3"
            ;;
        import)
            import_profile "$2" "$3"
            ;;
        help)
            display_help
            ;;
        *)
            echo "Invalid command: $1"
            display_help
            ;;
    esac
}

function create_profile {
    if [ -z "$1" ]; then
        echo "Error: No profile name provided."
        echo "Usage: prof create <profile_name> <load_order>"
        return 1
    fi

    if [ -z "$2" ]; then
        echo "Error: No load order provided."
        echo "Usage: prof create <profile_name> <load_order>"
        return 1
    fi

    if ! [[ "$2" =~ ^[0-9]+$ ]]; then
        echo "Error: Load order must be a positive integer."
        return 1
    fi

    if ! [[ "$1" =~ ^[A-Za-z0-9_-]+$ ]]; then
        echo "Error: Profile name can only contain letters, numbers, underscores, and hyphens."
        return 1
    fi

    local profile_name=$1
    local load_order=$2

    # Ensure the ~/.bash_profiles directory exists
    mkdir -p ~/.bash_profiles

    # Ensure the profile metadata file exists
    touch ~/.bash_profiles/.profile_metadata

    # Determine the user's preferred editor
    local editor=${EDITOR:-vi}  # Default to vi if no editor is set

    # Format the load order with leading zeros
    printf -v formatted_load_order "%02d" "$load_order"

    # Check if profile already exists
    if grep -qw "$profile_name" ~/.bash_profiles/.profile_metadata; then
        echo "Profile $profile_name already exists."
        return
    fi

    # Add the profile to the metadata file
    echo "$formatted_load_order $profile_name" >> ~/.bash_profiles/.profile_metadata

    # Copy the template to the new profile file
    cp profile_template.sh ~/.bash_profiles/$profile_name

    # Open the new profile in the editor
    $editor ~/.bash_profiles/$profile_name
}

function edit_profile {
    if [ -z "$1" ]; then
        echo "Error: No profile name provided."
        echo "Usage: prof edit <profile_name>"
        return 1
    fi

    local profile_name=$1

    # Determine the user's preferred editor
    local editor=${EDITOR:-vi}  # Default to vi if no editor is set

    # Check if the profile exists
    if grep -qw "$profile_name" ~/.bash_profiles/.profile_metadata; then
        # Open the profile in the editor
        $editor ~/.bash_profiles/$profile_name
    else
        echo "Error: Profile $profile_name does not exist."
        return 1
    fi
}

function delete_profile {
    if [ -z "$1" ]; then
        echo "Error: No profile name provided."
        echo "Usage: prof delete <profile_name>"
        return 1
    fi

    local profile_name=$1

    # Check if the profile exists
    if grep -qw "$profile_name" ~/.bash_profiles/.profile_metadata; then
        # Prompt for confirmation
        read -p "Are you sure you want to delete the profile '$profile_name'? This action cannot be undone. (y/n): " confirm
        if [[ "$confirm" =~ ^[Yy]$ ]]; then
            # Delete the profile file
            rm ~/.bash_profiles/$profile_name
            # Remove the profile from the metadata file
            sed -i "/$profile_name/d" ~/.bash_profiles/.profile_metadata
            echo "Profile '$profile_name' deleted."
        else
            echo "Deletion canceled."
        fi
    else
        echo "Error: Profile $profile_name does not exist."
        return 1
    fi
}

function list_profiles {
    # Check if the metadata file exists
    if [ ! -f ~/.bash_profiles/.profile_metadata ]; then
        echo "No profiles found."
        return 1
    fi

    echo "Profiles:"
    echo "---------"

    # Read the metadata file line by line
    while IFS= read -r line; do
        local load_order=$(echo "$line" | awk '{print $1}')
        local profile_name=$(echo "$line" | awk '{print $2}')
        echo "[$load_order] $profile_name"
    done < ~/.bash_profiles/.profile_metadata
}

function export_profile {
    local profile_name=$1
    local export_directory=$2

    if [ -z "$profile_name" ]; then
        echo "Error: No profile name provided."
        echo "Usage: prof export <profile_name> <export_directory>"
        return 1
    fi

    if [ -z "$export_directory" ]; then
        echo "Error: No export directory provided."
        echo "Usage: prof export <profile_name> <export_directory>"
        return 1
    fi

    # Check if the profile exists
    if grep -qw "$profile_name" ~/.bash_profiles/.profile_metadata; then
        # Create the export directory if it doesn't exist
        mkdir -p "$export_directory"

        # Copy the profile file to the export directory
        cp ~/.bash_profiles/$profile_name "$export_directory/$profile_name"

        echo "Profile '$profile_name' exported to $export_directory."
    else
        echo "Error: Profile '$profile_name' does not exist."
        return 1
    fi
}

function import_profile {
    local profile_file=$1
    local load_order=$2

    if [ -z "$profile_file" ]; then
        echo "Error: No profile file provided."
        echo "Usage: prof import <profile_file> <load_order>"
        return 1
    fi

    if [ -z "$load_order" ]; then
        echo "Error: No load order provided."
        echo "Usage: prof import <profile_file> <load_order>"
        return 1
    fi

    if ! [[ "$load_order" =~ ^[0-9]+$ ]]; then
        echo "Error: Load order must be a positive integer."
        return 1
    fi

    if [ ! -f "$profile_file" ]; then
        echo "Error: Profile file '$profile_file' does not exist."
        return 1
    fi

    local profile_name=$(basename "$profile_file")

    # Check if the profile already exists
    if grep -qw "$profile_name" ~/.bash_profiles/.profile_metadata; then
        echo "Profile '$profile_name' already exists. Skipping import."
    else
        # Copy the profile file to the ~/.bash_profiles directory
        cp "$profile_file" ~/.bash_profiles/
        # Add the profile to the metadata file with the provided load order
        echo "$load_order $profile_name" >> ~/.bash_profiles/.profile_metadata
        echo "Profile '$profile_name' imported with load order $load_order."
    fi
}


function display_help {
    echo "Display help function called"
    # Implement help display logic here.
}

# Entry point of the script
main "$@"

